[{"E:\\gmail-clone\\src\\index.js":"1","E:\\gmail-clone\\src\\App.js":"2","E:\\gmail-clone\\src\\serviceWorker.js":"3","E:\\gmail-clone\\src\\app\\store.js":"4","E:\\gmail-clone\\src\\Header.js":"5","E:\\gmail-clone\\src\\Sidebar.js":"6","E:\\gmail-clone\\src\\SidebarOption.js":"7","E:\\gmail-clone\\src\\Mail.js":"8","E:\\gmail-clone\\src\\EmailList.js":"9","E:\\gmail-clone\\src\\Section.js":"10","E:\\gmail-clone\\src\\EmailRow.js":"11","E:\\gmail-clone\\src\\features\\mailSlice.js":"12","E:\\gmail-clone\\src\\SendMail.js":"13","E:\\gmail-clone\\src\\firebase.js":"14","E:\\gmail-clone\\src\\features\\userSlice.js":"15","E:\\gmail-clone\\src\\Login.js":"16"},{"size":644,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":1641,"mtime":1609769290291,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":259,"mtime":1609757691164,"results":"21","hashOfConfig":"18"},{"size":1680,"mtime":1609771351718,"results":"22","hashOfConfig":"18"},{"size":2217,"mtime":1609648627882,"results":"23","hashOfConfig":"18"},{"size":356,"mtime":1608963604071,"results":"24","hashOfConfig":"18"},{"size":3224,"mtime":1609745577040,"results":"25","hashOfConfig":"18"},{"size":3693,"mtime":1609694342808,"results":"26","hashOfConfig":"18"},{"size":466,"mtime":1609054675839,"results":"27","hashOfConfig":"18"},{"size":1564,"mtime":1609741949418,"results":"28","hashOfConfig":"18"},{"size":745,"mtime":1609696235817,"results":"29","hashOfConfig":"18"},{"size":2552,"mtime":1609675854382,"results":"30","hashOfConfig":"18"},{"size":613,"mtime":1609765172782,"results":"31","hashOfConfig":"18"},{"size":460,"mtime":1609759823570,"results":"32","hashOfConfig":"18"},{"size":1083,"mtime":1609768589579,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"iozdd8",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\gmail-clone\\src\\index.js",[],["73","74"],"E:\\gmail-clone\\src\\App.js",["75","76"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport  Header from './Header';\r\nimport Sidebar from \"./Sidebar\";\r\nimport Mail from './Mail';\r\nimport EmailList from './EmailList';\r\nimport SendMail from \"./SendMail\";\r\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {selectsendMessageIsOpen} from './features/mailSlice';\r\nimport {selectUser}  from './features/userSlice';\r\nimport Login from './Login';\r\nimport {login } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n      const sendMessageIsOpen = useSelector(selectsendMessageIsOpen)\r\n      const user = useSelector(selectUser);\r\n      const dispatch =useDispatch();\r\n\r\n      useEffect(()=>  {\r\n              auth.onAuthStateChanged(user => {\r\n                if (user) {\r\n                  //the user is logged in\r\n                  dispatch(login({\r\n                    displayName:user.displayName,\r\n                    email:user.email,\r\n                    photoUrl:user.photoURL\r\n                  }))\r\n                } \r\n              })\r\n      },[] )\r\n\r\n  return (\r\n    <Router>\r\n\r\n  {!user ?  ( \r\n  <Login />\r\n   \r\n  ) : (\r\n\r\n  <div className=\"app\">\r\n    <Header />\r\n\r\n    <div className=\"app__body\">\r\n    <Sidebar />\r\n\r\n     <Switch>\r\n       <Route path=\"/mail\">\r\n         <Mail />\r\n       </Route>\r\n       <Route path=\"/\">\r\n         <EmailList />\r\n       </Route>\r\n     </Switch>\r\n     \r\n     </div>\r\n    \r\n    {sendMessageIsOpen &&  <SendMail /> }\r\n\r\n    </div>\r\n  )}\r\n    </Router>\r\n    \r\n\r\n  \r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\gmail-clone\\src\\serviceWorker.js",[],"E:\\gmail-clone\\src\\app\\store.js",[],"E:\\gmail-clone\\src\\Header.js",[],"E:\\gmail-clone\\src\\Sidebar.js",[],"E:\\gmail-clone\\src\\SidebarOption.js",[],"E:\\gmail-clone\\src\\Mail.js",[],"E:\\gmail-clone\\src\\EmailList.js",["77"],"import React, { useEffect,useState } from 'react';\r\nimport {Checkbox , IconButton } from \"@material-ui/core\"\r\nimport { ArrowDropDown, Inbox } from '@material-ui/icons';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailRow from './EmailRow'\r\nimport './EmailList.css'\r\nimport Section from './Section'\r\nimport { db } from './firebase';\r\n\r\n\r\nfunction EmailList() {\r\n    const [emails,setEmails] = useState([]);\r\n    \r\n    useEffect(() => {\r\n         \r\n           db.collection('emails')\r\n           .orderBy('timestamp','desc')\r\n           .onSnapshot((snapshot) =>\r\n             setEmails(snapshot.docs.map((doc)=>( {\r\n               id:doc.id,\r\n               data:doc.data(),\r\n           }))\r\n             )\r\n           );\r\n    \r\n    } ,[] );\r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n          <div className=\"emailList__settings\">\r\n              <div className=\"emailList__settingsLeft\">\r\n                 <Checkbox />\r\n                 <IconButton>\r\n                     <ArrowDropDown />\r\n                 </IconButton>\r\n                 \r\n                 <IconButton>\r\n                     <RedoIcon />\r\n                 </IconButton>\r\n                 \r\n                 <IconButton>\r\n                     <MoreVertIcon />\r\n                 </IconButton>\r\n         </div>\r\n             <div className=\"emailList__settingsRight\">\r\n                 <IconButton>\r\n                     <ChevronLeftIcon />\r\n                 </IconButton>\r\n                 <IconButton>\r\n                     <ChevronRightIcon />\r\n                 </IconButton>\r\n                 <IconButton>\r\n                     <KeyboardHideIcon />\r\n                 </IconButton>\r\n                 <IconButton>\r\n                     <SettingsIcon />\r\n                 </IconButton>\r\n             </div>\r\n\r\n           </div> \r\n           <div className=\"emailList__sections\">\r\n               <Section Icon={InboxIcon} title='Primary' color='red' selected />    \r\n               <Section Icon={PeopleIcon} title='Social' color='#1A73E8'  />  \r\n               <Section Icon={LocalOfferIcon} title='promotions' color='green' />   \r\n               </div>\r\n\r\n              <div className=\"emailList__list\">\r\n              {/* mapping and destructuring */}\r\n              {emails.map(({id,data:{to,subject,message,timestamp\r\n              } }) => (\r\n                    <EmailRow \r\n                      \r\n                    id={id}\r\n                    key={id} \r\n                    title={to}\r\n                    subject={subject}\r\n                    description={message}\r\n                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                    />\r\n              ))}\r\n                  <EmailRow \r\n                  title=\"New Year2021\"\r\n                  subject=\"Happy new year to all!!\"\r\n                  description=\"This is a test\"\r\n                  time=\"12:02AM\"\r\n                  />\r\n                   <EmailRow \r\n                  title=\"New Year \"\r\n                  subject=\"Happy new year to all!!\"\r\n                  description=\"This is a Demo\"\r\n                  time=\"12:00AM\"\r\n                  />\r\n              </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailList;","E:\\gmail-clone\\src\\Section.js",["78"],"import { BorderBottom } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Section.css'\r\n\r\nfunction Section({Icon, title,color,selected}) {\r\n    return (\r\n        <div className={`section ${selected && 'section--selected'}`}\r\n        style ={{\r\n            borderBottom: `3px solid ${color}`,\r\n            color: `${selected && color}`,\r\n         }} >\r\n         <Icon />\r\n         <h4>{title}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;",["79","80"],"E:\\gmail-clone\\src\\EmailRow.js",["81"],"import { IconButton , Checkbox, Popover} from '@material-ui/core';\r\nimport { LabelImportantOutlined, StarBorderOutlined } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './EmailRow.css';\r\nimport { selectMail } from './features/mailSlice';\r\n\r\nfunction EmailRow({id,title, subject, description,time}) {\r\n      const history = useHistory();\r\n      const dispatch = useDispatch();\r\n\r\n    const  openMail = () =>{\r\n          dispatch(selectMail({\r\n            id,\r\n            title, \r\n            subject,\r\n            description,\r\n            time,\r\n\r\n          })\r\n          \r\n          );\r\n          history.push(\"/mail\")\r\n      };\r\n\r\n    return (\r\n        <div onClick={openMail} className=\"emailRow\">\r\n            <div className=\"emailRow__options\">\r\n                 <Checkbox />\r\n                 <IconButton>\r\n               <StarBorderOutlined />      \r\n                 </IconButton>\r\n                 <IconButton>\r\n                     <LabelImportantOutlined />\r\n                 </IconButton>\r\n            </div>\r\n\r\n            <h3 className=\"emailRow__title\">{title} </h3>\r\n\r\n            <div className=\"emailRow__message\">\r\n                <h4>{subject}{\" \"}\r\n             \r\n                <span className=\"emailRow__description\">\r\n                    {description}\r\n                </span>\r\n                </h4>\r\n            </div>\r\n            <p className='emailRow__time'>{time} </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailRow;","E:\\gmail-clone\\src\\features\\mailSlice.js",[],"E:\\gmail-clone\\src\\SendMail.js",["82"],"import React from 'react';\r\nimport \"./SendMail.css\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core/';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice'\r\nimport {db} from \"./firebase\";\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction SendMail() {\r\n    const dispatch = useDispatch();\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    \r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection('emails').add(\r\n            {\r\n            to:formData.to,\r\n            subject: formData.subject,\r\n            message:formData.message,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        dispatch(closeSendMessage());\r\n     };\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail__header\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon onClick={() => dispatch(closeSendMessage())} className=\"sendMail__close\" />\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <input\r\n                    name=\"to\"\r\n                    placeholder=\"TO\"\r\n                    type=\"email\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.to && <p className=\"sendMail__error\"> To is Required!</p>}\r\n\r\n                <input name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    type=\"text\"\r\n                    ref={register({ required: true })}\r\n\r\n                />\r\n                {errors.subject && <p className=\"sendMail__error\"> Subject is Required!</p>}\r\n\r\n\r\n                <input\r\n                    name=\"message\"\r\n                    placeholder=\"Messsage\" type=\"text\"\r\n                    className=\"sendMail__message\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.message && <p className=\"sendMail__error\"> Message is Required!</p>}\r\n\r\n                <div className=\"sendMail__option\">\r\n                    <Button\r\n                        className=\"sendMail__send\"\r\n                        varient=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Send\r\n                       </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default SendMail;","E:\\gmail-clone\\src\\firebase.js",[],"E:\\gmail-clone\\src\\features\\userSlice.js",[],"E:\\gmail-clone\\src\\Login.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":46,"nodeType":"89","messageId":"90","endLine":8,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":32,"column":9,"nodeType":"93","endLine":32,"endColumn":11,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":3,"column":25,"nodeType":"89","messageId":"90","endLine":3,"endColumn":30},{"ruleId":"87","severity":1,"message":"96","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":22},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"87","severity":1,"message":"99","line":1,"column":33,"nodeType":"89","messageId":"90","endLine":1,"endColumn":40},{"ruleId":"87","severity":1,"message":"100","line":14,"column":37,"nodeType":"89","messageId":"90","endLine":14,"endColumn":42},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'Inbox' is defined but never used.","'BorderBottom' is defined but never used.",["101"],["102"],"'Popover' is defined but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch]",{"range":"106","text":"107"},[1153,1155],"[dispatch]"]